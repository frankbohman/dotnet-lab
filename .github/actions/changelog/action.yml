name: 'generate-changelog'
description: 'generate changelog'
branding:
  icon: 'git-commit'
  color: 'red'
inputs:
  release:
    description: "ready for release"
    default: false
outputs:
  version:
    description: "Version released"
    value: ${{ steps.convco.outputs.version }}
runs:
  using: "composite"
  steps:

    - name: Install tools
      shell: bash
      run: |
        sudo apt install -y libarchive-tools

    - name: Install convco
      shell: bash
      run: |
        curl -#L https://github.com/convco/convco/releases/download/v0.5.1/convco-ubuntu.zip | bsdtar -xf- - -C /usr/local/bin/
        chmod a+x /usr/local/bin/convco
      
    - uses: actions/checkout@v4
      permissions:
        contents: write
      with:
        fetch-depth: 0
        ref: ${{ github.event.repository.default_branch }}

    - run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

        VERSION=${{ inputs.version }}

        # If the version starts with a v, remove it
        if [[ $VERSION == v* ]]; then
          VERSION=${VERSION:1}
        fi

        # Tag with the full version
        if [[ "${{ inputs.push-tag }}" == "true" ]]; then
          git tag v$VERSION
        fi
       

        convco changelog > ${{ inputs.changelog-path }}
        git add ${{ inputs.changelog-path }}
        git commit -am "chore: Updating changelog"
        git push
        git push origin v$VERSION

        if [[ "${{ inputs.update-major-tag }}" == "true" ]]; then
          if [[ $VERSION =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)(.*)$ ]]; then
                # Create or update the major version tag
                git tag -f v${BASH_REMATCH[1]}
                git push origin v${BASH_REMATCH[1]} --force
          fi
        fi
      shell: bash
      